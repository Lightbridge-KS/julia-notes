{
  "hash": "89aeaac105909a75b19bad9c29514859",
  "result": {
    "markdown": "# Data Frame\n\n## Create DF\n\n::: {.cell execution_count=1}\n``` {.julia .cell-code}\nusing DataFrames\n```\n:::\n\n\n### Using Column Vector\n\n::: {.cell execution_count=2}\n``` {.julia .cell-code}\ndf = DataFrame(\n    ID = 1:4, \n    Subject = repeat([\"M\", \"F\"], outer=2),\n    Is_OK = true\n    )\n```\n\n::: {.cell-output .cell-output-display execution_count=3}\n```{=html}\n<div class=\"data-frame\"><p>4 rows × 3 columns</p><table class=\"data-frame\"><thead><tr><th></th><th>ID</th><th>Subject</th><th>Is_OK</th></tr><tr><th></th><th title=\"Int64\">Int64</th><th title=\"String\">String</th><th title=\"Bool\">Bool</th></tr></thead><tbody><tr><th>1</th><td>1</td><td>M</td><td>1</td></tr><tr><th>2</th><td>2</td><td>F</td><td>1</td></tr><tr><th>3</th><td>3</td><td>M</td><td>1</td></tr><tr><th>4</th><td>4</td><td>F</td><td>1</td></tr></tbody></table></div>\n```\n:::\n:::\n\n\n::: {.cell execution_count=3}\n``` {.julia .cell-code}\ntypeof(df)\n```\n\n::: {.cell-output .cell-output-display execution_count=4}\n```\nDataFrame\n```\n:::\n:::\n\n\n::: {.cell execution_count=4}\n``` {.julia .cell-code}\nnames(df)\n```\n\n::: {.cell-output .cell-output-display execution_count=5}\n```\n3-element Vector{String}:\n \"ID\"\n \"Subject\"\n \"Is_OK\"\n```\n:::\n:::\n\n\n### Create from Dict\n\n::: {.cell execution_count=5}\n``` {.julia .cell-code}\ndict = Dict(:first_name => [\"Rohit\", \"Rahul\", \"Akshat\"],\n            :customer_age => [15, 20, 25]\n            )\ndf2 = DataFrame(dict)\n```\n\n::: {.cell-output .cell-output-display execution_count=6}\n```{=html}\n<div class=\"data-frame\"><p>3 rows × 2 columns</p><table class=\"data-frame\"><thead><tr><th></th><th>customer_age</th><th>first_name</th></tr><tr><th></th><th title=\"Int64\">Int64</th><th title=\"String\">String</th></tr></thead><tbody><tr><th>1</th><td>15</td><td>Rohit</td></tr><tr><th>2</th><td>20</td><td>Rahul</td></tr><tr><th>3</th><td>25</td><td>Akshat</td></tr></tbody></table></div>\n```\n:::\n:::\n\n\nConvert `df2` back to `Dict` ([Ref](https://stackoverflow.com/questions/63752067/how-to-create-dictionary-from-julia-dataframe))\n\n::: {.cell execution_count=6}\n``` {.julia .cell-code}\npairs(eachcol(df2)) |> Dict\n```\n\n::: {.cell-output .cell-output-display execution_count=7}\n```\nDict{Symbol, AbstractVector} with 2 entries:\n  :customer_age => [15, 20, 25]\n  :first_name   => [\"Rohit\", \"Rahul\", \"Akshat\"]\n```\n:::\n:::\n\n\n::: {.cell execution_count=7}\n``` {.julia .cell-code}\npairs(df2.first_name) |> Dict\n```\n\n::: {.cell-output .cell-output-display execution_count=8}\n```\nDict{Int64, String} with 3 entries:\n  2 => \"Rahul\"\n  3 => \"Akshat\"\n  1 => \"Rohit\"\n```\n:::\n:::\n\n\n::: {.cell execution_count=8}\n``` {.julia .cell-code}\nPair.(df2.first_name, df2.customer_age) |> Dict\n```\n\n::: {.cell-output .cell-output-display execution_count=9}\n```\nDict{String, Int64} with 3 entries:\n  \"Akshat\" => 25\n  \"Rahul\"  => 20\n  \"Rohit\"  => 15\n```\n:::\n:::\n\n\n## Subsetting\n\n### By Column\n\n::: {.cell execution_count=9}\n``` {.julia .cell-code}\ndf.ID\n```\n\n::: {.cell-output .cell-output-display execution_count=10}\n```\n4-element Vector{Int64}:\n 1\n 2\n 3\n 4\n```\n:::\n:::\n\n\nReturn a copy of the column by:\n\n::: {.cell execution_count=10}\n``` {.julia .cell-code}\ndf[:, :ID]\n```\n\n::: {.cell-output .cell-output-display execution_count=11}\n```\n4-element Vector{Int64}:\n 1\n 2\n 3\n 4\n```\n:::\n:::\n\n\nThis will modify `df` in-place:\n\n::: {.cell execution_count=11}\n``` {.julia .cell-code}\ndf[!, :ID][1] = 5\n```\n\n::: {.cell-output .cell-output-display execution_count=12}\n```\n5\n```\n:::\n:::\n\n\n::: {.cell execution_count=12}\n``` {.julia .cell-code}\ndf\n```\n\n::: {.cell-output .cell-output-display execution_count=13}\n```{=html}\n<div class=\"data-frame\"><p>4 rows × 3 columns</p><table class=\"data-frame\"><thead><tr><th></th><th>ID</th><th>Subject</th><th>Is_OK</th></tr><tr><th></th><th title=\"Int64\">Int64</th><th title=\"String\">String</th><th title=\"Bool\">Bool</th></tr></thead><tbody><tr><th>1</th><td>5</td><td>M</td><td>1</td></tr><tr><th>2</th><td>2</td><td>F</td><td>1</td></tr><tr><th>3</th><td>3</td><td>M</td><td>1</td></tr><tr><th>4</th><td>4</td><td>F</td><td>1</td></tr></tbody></table></div>\n```\n:::\n:::\n\n\n",
    "supporting": [
      "dataframe_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}